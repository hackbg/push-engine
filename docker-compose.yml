services:
  transmitter:
    build: .
    ports:
      - '3000:3000'
    environment:
      - PORT=3000
      - REDIS_HOST=transmitter-redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - PRIVATE_KEY_EVM=${PRIVATE_KEY_EVM}
      - SECRET_KEY_SVM=${SECRET_KEY_SVM}
      - DATASTREAMS_HOSTNAME=${DATASTREAMS_HOSTNAME}
      - DATASTREAMS_WS_HOSTNAME=${DATASTREAMS_WS_HOSTNAME}
      - DATASTREAMS_CLIENT_ID=${DATASTREAMS_CLIENT_ID}
      - DATASTREAMS_CLIENT_SECRET=${DATASTREAMS_CLIENT_SECRET}
    volumes:
      - ./logs:/transmitter/logs
    # Adding 'depends_on' is good practice to ensure Redis starts first
    depends_on:
      - transmitter-redis

  transmitter-redis:
    # CHANGE 1: Use the correct image that includes all necessary modules
    image: redis/redis-stack:latest
    container_name: transmitter-redis
    ports:
      - '6379:6379'
    volumes:
      - ./data:/data
    # CHANGE 2: Use an inline script to conditionally set the password
    command: >
      sh -c "
        if [ -n \"$REDIS_PASSWORD\" ]; then
          exec redis-stack-server --requirepass \"$REDIS_PASSWORD\" --save 60 1 --appendonly yes
        else
          exec redis-stack-server --save 60 1 --appendonly yes
        fi
      "

networks:
  default:
    driver: bridge
